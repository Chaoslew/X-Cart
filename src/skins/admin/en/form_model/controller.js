/* vim: set ts=2 sw=2 sts=2 et: */

/**
 * Controller
 *
 * Copyright (c) 2011-present Qualiteam software Ltd. All rights reserved.
 * See https://www.x-cart.com/license-agreement.html for license details.
 */

(function () {

  Vue.config.debug = true;

  var state = false;

  var FormModel = Vue.extend({
    props: ['form', 'original', 'changed'],
    activate: function (done) {
      var self = this;
      setTimeout(function () {
        self.$set('original', JSON.parse(JSON.stringify(self.form)));
        state = true;
      }, 1000);
      done();
    },
    methods: {
      isChanged: function (model, event) {
        if (state === false) {
          state = objectHash.sha1(this.form);
          state = null;

          return true;
        }

        if (state === null) {
          state = objectHash.sha1(this.form);

          return false;
        }

        for (var sectionName in this.original) {
          for (var fieldName in this.original[sectionName]) {
            if (typeof this.original[sectionName][fieldName] == 'object') {
              if (objectHash.sha1(this.form[sectionName][fieldName]) != objectHash.sha1(this.original[sectionName][fieldName])) {

                this.changed = true;
                return true;
              }
            } else {
              if (this.form[sectionName][fieldName] != this.original[sectionName][fieldName]) {
                this.changed = true;
                return true;
              }
            }
          }
        }

        this.changed = false;
        return false;
      },
      getAutogeneratedCleanURL: function () {
        
      }
    }
  });

  Vue.component('xlite-form-model', FormModel);

  /*
  window.test = new Vue({
    el: '.form-vue',
    directives: {
      xliteModel: {
        bind: function () {
          this.vm.$set(this.arg, this.expression);
        }
      },
      xliteBackendValidator: {
        bind: function () {
          var el = this.el;
          this.vm.$watch(this.expression, function () {
            if (el.parentNode) {
              el.parentNode.removeChild(el);
            }
          })
        }
      }
    },
    data: function () {
      return JSON.parse(this.$options.el.dataset.xliteModel);
    }
  });
  */

  $(function () {
    var vm = window.vueroot = new Vue({
      el: 'body'
    });
  });

})();
